/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DiamondPepeNFTs1inchRouter,
  DiamondPepeNFTs1inchRouterInterface,
} from "../DiamondPepeNFTs1inchRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_aggregationRouterV4Address",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldMintAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rdpxAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "aggregationRouterV4",
    outputs: [
      {
        internalType: "contract I1inchAggregationRouterV4",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rdpx",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct I1inchAggregationRouterV4.SwapDescription",
        name: "_desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "swapAndDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldMint",
    outputs: [
      {
        internalType: "contract YieldMint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class DiamondPepeNFTs1inchRouter__factory {
  static readonly abi = _abi;
  static createInterface(): DiamondPepeNFTs1inchRouterInterface {
    return new utils.Interface(_abi) as DiamondPepeNFTs1inchRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondPepeNFTs1inchRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DiamondPepeNFTs1inchRouter;
  }
}
